class Solution {
public:
    bool checkMirror(TreeNode* node1, TreeNode* node2) {
        if (node1 == nullptr && node2 == nullptr) return true;
        if (node1 == nullptr || node2 == nullptr) return false;

        return (node1->val == node2->val) &&
               checkMirror(node1->left, node2->right) &&
               checkMirror(node1->right, node2->left);
    }

    bool isSymmetric(TreeNode* root) {
        if (root == nullptr) return true;
        return checkMirror(root->left, root->right);
    }
};
